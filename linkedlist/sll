class Node:
    def __init__(self,ele):
        self.head = ele
        self.next = None
class sll:
    def __init__(self):
        self.head = None
    def insertbeg(self,ele):
        newnode = Node(ele)
        if(self.head==None):
            self.head = newnode
        else:
            newnode.next = self.head
            self.head = newnode
    def insertend(self,ele):
        newnode = Node(ele)
        if(self.head==  None):
            self.head = newnode
        else:
            position = self.head
            while(position.next!=None):
               position = position.next
            newnode.next = position.next
            position.next = newnode
    def insertmid(self,pos,ele):
        newnode = Node(ele)
        position = self.head
        while(position.next!=None and position.head!=pos):
            position = position.next
        newnode.next=position.next
        position.next = newnode
    def deletebeg(self):
        if(self.head==None):
            print("empty list")
        else:
            print("the deleted item is",self.head.head)
            self.head = self.head.next
    def deleteend(self):
        if(self.head==None):
            print("empty list")
        else:
            position = self.head
            while(position.next.next!=None):
                position = position.next
            print("The deleted item is",position.next.head)
            position.next = None
    def deletemid(self,pos):
        position = self.head
        while(position.next.next!=None or position.next.head!=pos):
            position = position.next
        position.next = position.next.next
    def find(self,ele):
        position = self.head
        while(position.next!=None or position.head!=ele):
            position = position.next
        if(position.next ==None):
            print("not found")
        else:
            print("found")
    def traverse(self):
        position = self.head
        while(position!=None):
            print(position.head,end=" ")
            position = position.next
        
        
sll = sll()
sll.insertend(8)
sll.traverse()
sll.insertbeg(7)
sll.traverse()
sll.insertmid(7,6)
sll.traverse()
sll.deleteend()
sll.traverse()
sll.deletebeg()
sll.traverse()


        
